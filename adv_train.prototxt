layer {
  name: "data1"
  type: "Python"
  top: "data1"
  top: "label"
  top: "fakelabel"
  python_param {
    module: "adv_mapillary_layer"
    layer: "MapillaryLayer"
    param_str: "{\'img_dir\': \'/l/vision/v5/chen478/Fall2018/mapillary/training/images/\', \'label_dir\': \'/l/vision/v5/chen478/Fall2018/fcn.mapillary/results/seg_res_train/\', \'seed\': 1337, \'mean\': (71.60167789, 82.09696889, 72.30608881)}"
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  #bottom: "input"
  bottom: "data1"
  top: "conv1"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale1"
  type: "Scale"
  bottom: "bn1"
  top: "bn1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "bn1"
  top: "conv2"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2"
  type: "Scale"
  bottom: "bn2"
  top: "bn2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn2"
  top: "conv3"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "bn3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3"
  type: "Scale"
  bottom: "bn3"
  top: "bn3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "bn3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "bn3"
  top: "conv4"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "bn4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4"
  type: "Scale"
  bottom: "bn4"
  top: "bn4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "bn4"
}
layer {
  name: "embed_conv2"
  type: "Deconvolution"
  bottom: "bn4"
  top: "embed_conv2"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "embed_bn2"
  type: "BatchNorm"
  bottom: "embed_conv2"
  top: "embed_bn2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "embed_scale2"
  type: "Scale"
  bottom: "embed_bn2"
  top: "embed_bn2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "embed_relu2"
  type: "ReLU"
  bottom: "embed_bn2"
  top: "embed_bn2"
}


layer {
  name: "concat1"
  bottom: "bn3"
  bottom: "embed_bn2"
  top: "concat1"
  type: "Concat"
  concat_param {
    axis: 1
  }
}


layer {
  name: "embed_conv3"
  type: "Deconvolution"
  #bottom: "embed_bn2"
  bottom: "concat1"
  top: "embed_conv3"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 6
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "embed_bn3"
  type: "BatchNorm"
  bottom: "embed_conv3"
  top: "embed_bn3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "embed_scale3"
  type: "Scale"
  bottom: "embed_bn3"
  top: "embed_bn3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "embed_relu3"
  type: "ReLU"
  bottom: "embed_bn3"
  top: "embed_bn3"
}

layer {
  name: "concat2"
  bottom: "bn2"
  bottom: "embed_bn3"
  top: "concat2"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "embed_conv4"
  type: "Deconvolution"
  bottom: "concat2"
  #bottom: "embed_bn3"
  top: "embed_conv4"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "embed_bn4"
  type: "BatchNorm"
  bottom: "embed_conv4"
  top: "embed_bn4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "embed_scale4"
  type: "Scale"
  bottom: "embed_bn4"
  top: "embed_bn4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "embed_relu4"
  type: "ReLU"
  bottom: "embed_bn4"
  top: "embed_bn4"
}

layer {
  name: "concat3"
  bottom: "bn1"
  bottom: "embed_bn4"
  top: "concat3"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "seg"
  type: "Deconvolution"
  bottom: "concat3"
  #bottom: "embed_bn4"
  top: "seg"
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "seg_bn"
  type: "BatchNorm"
  bottom: "seg"
  top: "seg_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "seg_scale"
  type: "Scale"
  bottom: "seg_bn"
  top: "seg_bn"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "reg_loss"
  type: "SoftmaxWithLoss"
  bottom: "seg_bn"
  bottom: "label"
  top: "reg_loss"
  loss_weight: 1e-2
  loss_param {
    ignore_label: 255
    normalize: false
  }
}


layer {
  name: "embed_conv5"
  type: "Deconvolution"
  bottom: "concat3"
  #bottom: "embed_bn4"
  top: "embed_conv5"
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "embed_bn5"
  type: "BatchNorm"
  bottom: "embed_conv5"
  top: "embed_bn5"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "embed_scale5"
  type: "Scale"
  bottom: "embed_bn5"
  top: "embed_bn5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "mask"
  type: "RandVec"
  top: "mask"
  rand_vec_param {
    batch_size: 2
    dim:3 
    height:160 
    width:320
  }
}
layer {
  name: "masked"
  type: "Eltwise"
  bottom: "embed_bn5"
  bottom: "mask"
  top: "masked"
  eltwise_param {
    operation: PROD
  }
}

layer {
  name: "data"
  type: "Eltwise"
  bottom: "data1"
  bottom: "masked"
  top: "data"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 100
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    pad: 0
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "Convolution"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "score_fr"
  type: "Convolution"
  bottom: "fc7"
  top: "score_fr"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
  }
}
layer {
  name: "upscore2"
  type: "Deconvolution"
  bottom: "score_fr"
  top: "upscore2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  convolution_param {
    num_output: 19
    bias_term: false
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "score_pool4"
  type: "Convolution"
  bottom: "pool4"
  top: "score_pool4"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
  }
}
layer {
  name: "score_pool4c"
  type: "Crop"
  bottom: "score_pool4"
  bottom: "upscore2"
  top: "score_pool4c"
  crop_param {
    axis: 2
    offset: 5
  }
}
layer {
  name: "fuse_pool4"
  type: "Eltwise"
  bottom: "upscore2"
  bottom: "score_pool4c"
  top: "fuse_pool4"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "upscore_pool4"
  type: "Deconvolution"
  bottom: "fuse_pool4"
  top: "upscore_pool4"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  convolution_param {
    num_output: 19
    bias_term: false
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "score_pool3"
  type: "Convolution"
  bottom: "pool3"
  top: "score_pool3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
  }
}
layer {
  name: "score_pool3c"
  type: "Crop"
  bottom: "score_pool3"
  bottom: "upscore_pool4"
  top: "score_pool3c"
  crop_param {
    axis: 2
    offset: 9
  }
}
layer {
  name: "fuse_pool3"
  type: "Eltwise"
  bottom: "upscore_pool4"
  bottom: "score_pool3c"
  top: "fuse_pool3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "upscore8"
  type: "Deconvolution"
  bottom: "fuse_pool3"
  top: "upscore8"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  convolution_param {
    num_output: 19
    bias_term: false
    kernel_size: 16
    stride: 8
  }
}
layer {
  name: "score"
  type: "Crop"
  bottom: "upscore8"
  bottom: "data"
  top: "score"
  crop_param {
    axis: 2
    offset: 31
  }
}
layer {
  name: "loss"
  type: "AdvSoftmaxWithLoss"
  bottom: "score"
  bottom: "fakelabel"
  top: "loss"
  loss_param {
    ignore_label: 255
    normalize: false
  }
  adv_softmax_with_loss_param{
    offset: 16
    #type: 2
  }
}
